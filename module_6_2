class Vehicle:
    _COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']

    def __init__(self, owner, _model, _color, _engine_power):
        self.owner = str(owner)
        self._model = str(_model)
        self._engine_power = int(_engine_power)
        self._color = str(_color)

    def get_model(self):
        print(f'Модель: {self._model}')

    def get_horsepower(self):
        print(f'Мощность двигателя: {self._engine_power}')

    def get_color(self):
        print(f'Цвет: {self._color}')

    def print_info(self):
        self.get_model()
        self.get_horsepower()
        self.get_color()
        print(f'Владелец: {self.owner}')

    def set_color(self, new_color):
        check = 0
        self.new_color = str(new_color)
        check_new_color = new_color.lower()
        for i in range(len(self._COLOR_VARIANTS)):
            color1 = str(self._COLOR_VARIANTS[i].lower())
            if color1 == check_new_color:
                self._color = new_color
                break
            else:
                check += 1
        if check == len(self._COLOR_VARIANTS):
            print(f'Нельзя сменить цвет на {new_color}')



class Sedan(Vehicle):
    __PASSENGERS_LIMIT = 5


# Текущие цвета __COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']
vehicle1 = Sedan('Fedos', 'Toyota Mark II', 'blue', 500)

# Изначальные свойства
vehicle1.print_info()

# Меняем свойства (в т.ч. вызывая методы)
vehicle1.set_color('Pink')
vehicle1.set_color('BLACK')
vehicle1.owner = 'Vasyok'

# Проверяем что поменялось
vehicle1.print_info()
