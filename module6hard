from math import sqrt
import math

class Figure:
    sides_count = 0

    def __init__(self, color, sides, filled=False):
        self.__sides = sides
        self.__color = color
        self.filled = filled

    def get_color(self):
        return [*self.__color]

    def __is_valid_color(self, r, g, b):
        return all(isinstance(value, int) and 0 <= value <= 255 for value in [r, g, b])

    def set_color(self, r, g, b):
        if self.__is_valid_color(r, g, b):
            self.__color = (r, g, b)

    def __is_valid_sides(self, *new_sides):
        return len(new_sides) == len(self.__sides) and all(isinstance(value, int) and value > 0 for value in new_sides)

    # def __is_valid_sides(self, *new_sides):
    #     return (len(new_sides) == len(self.__sides) and all(isinstance(value, int) and value > 0 for value in new_sides))

    def get_sides(self):
        return self.__sides

    def __len__(self):
        return sum(self.__sides)
        # return sum(l1)

    def set_sides(self, *new_sides):
        if self.__is_valid_sides(*new_sides):
            self.__sides = [*new_sides]


class Circle(Figure):
    sides_count = 1

    def __init__(self, color, radius, filled=False):
        super().__init__(color, [radius], filled)
        self.__radius = [radius]

    def get_square(self):
        return (self.__radius)^2*3,14

class Triangle(Figure):
    sides_count = 3

    def __init__(self, color, sides, filled=False):
        super().__init__(self, color, sides)

    def get_square(self):
        p = 0.5*(len(self.__sides))
        return p

class Cube(Figure):
    sides_count = 12

    def __init__(self, color, sides, filled=False):
        super().__init__(color, [sides]*12, filled)
        self.__sides = sides

    def get_volume(self):
        return self.__sides**3


circle1 = Circle((200, 200, 100), 10) # (Цвет, стороны)
cube1 = Cube((222, 35, 130), 6)

# Проверка на изменение цветов:
circle1.set_color(55, 66, 77) # Изменится
print(circle1.get_color())
cube1.set_color(300, 70, 15) # Не изменится
print(cube1.get_color())

# # Проверка на изменение сторон:
cube1.set_sides(5, 3, 12, 4, 5) # Не изменится
print(cube1.get_sides())
circle1.set_sides(15) # Изменится
print(circle1.get_sides())

# Проверка периметра (круга), это и есть длина:
print(len(circle1))

# # Проверка объёма (куба):
print(cube1.get_volume())

