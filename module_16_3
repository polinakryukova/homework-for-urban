from fastapi import FastAPI, Path
# from

app = FastAPI()        

users = {'1': 'Имя: Example, возраст: 18'}

@app.get('/users')
async def get_users() -> dict:
    return users

@app.post('/user/{username}/{age}')
async def post_user(username: str = Path(min_length=5, max_length=20, description='Enter username', example='UrbanUser'), age: int = Path(ge = 18, description='Enter age', example='24')) -> dict:
    current_index = str(max(int(key) for key in users) + 1)
    users[current_index] = f'Имя: {username}, возраст: {age}'
    return {'message': f"User {current_index} is registered"}

@app.put('/user/{user_id}/{username}/{age}')
async def put_user(user_id: int = Path(ge=1, le= 100, description="Enter User ID", example="1"), username: str = Path(min_length=5, max_length=20, description='Enter username', example='UrbanUser'), age: int = Path(ge = 18, description='Enter age', example='24')) -> dict:
    if user_id in users:
        users[user_id] = f"Имя: {username}, возраст: {age}"
        return {'message': f"The user {user_id} is registered"}
    else:
        return {'message': f"User {user_id} does not exist"}

@app.delete('/user/{user_id}')
async def delete_user(user_id: int = Path(ge=1, le= 100, description="Enter User ID", example="1")) -> dict:
    if user_id in users:
        del users[user_id]
        return {'message': f"User {user_id} has been deleted"}
    else:
        return {'message': f"User {user_id} does not exist"}
